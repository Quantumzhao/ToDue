<Window 
	x:Class="ToDue2.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:ToDue2"
	xmlns:converters="clr-namespace:ToDue2.Converters"
	xmlns:p="clr-namespace:ToDue2.Properties"
	xmlns:tb="http://www.hardcodet.net/taskbar"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	Title="ToDue 2" 
	MinHeight="633" 
	MinWidth="420"
	Width="420"
	Background="Transparent"
	StateChanged="Window_StateChanged" 
	Loaded="Window_Loaded"
	WindowStyle="None" 
	AllowsTransparency="True" 
	Left="10" 
	Top="10"
	Name="Window"
	ShowInTaskbar="False"
	ShowActivated="False"
	Icon=".\icon [256x256].ico" 
	ResizeMode="NoResize">
	<Window.Resources>
		<converters:DateConverter x:Key="DateConverter"/>
		<converters:ColorConverter x:Key="ColorConverter"/>
		<converters:NegateConverter x:Key="NegateConverter"/>
		<converters:VisibilityConverter x:Key="VisibilityConverter"/>
		<converters:PriorityToColorConverter x:Key="PriorityToColorConverter"/>
		<converters:PriorityToFontWeightConverter x:Key="PriorityToFontWeightConverter"/>
		<Style x:Key="DefaultButton" TargetType="Button">
			<Style.Setters>
				<Setter 
					Property="Background" 
					Value="{StaticResource TransparentBackground}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border 
								Background="{StaticResource TransparentBackground}"
								BorderBrush="{x:Null}">
								<ContentPresenter 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center">
								</ContentPresenter>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="Button">
									<Border 
										Background="{DynamicResource HighlightBackground}"
										BorderBrush="{x:Null}">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="Button">
									<Border 
										Background="{DynamicResource PressedBackground}"
										BorderBrush="{x:Null}">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger.Setters>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="Item" TargetType="TextBox">
			<Style.Setters>
				<Setter 
					Property="Background" 
					Value="{StaticResource TransparentBackground}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
			</Style.Setters>
		</Style>
		<Style x:Key="Title" TargetType="TextBlock">
			<Style.Setters>
				<Setter Property="FontFamily" Value="./Resources/#Conservative Simplicity"/>
				<Setter 
					Property="Foreground" 
					Value="{DynamicResource Foreground}"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="VerticalAlignment" Value="Top"/>
				<Setter Property="FontSize" Value="70"/>
			</Style.Setters>
		</Style>
		<Style x:Key="Body" TargetType="TextBlock">
			<Style.Setters>
				<Setter Property="FontFamily" Value="Segoe UI Light"/>
				<Setter 
					Property="Foreground" 
					Value="{DynamicResource Foreground}"/>
				<Setter Property="FontSize" Value="20"/>
			</Style.Setters>
		</Style>
		<Style x:Key="Pin" TargetType="ToggleButton">
			<Style.Setters>
				<Setter 
					Property="Background" 
					Value="{StaticResource TransparentBackground}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Opacity" Value="0.5"/>
				<Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Border 
								Background="{StaticResource TransparentBackground}"
								BorderBrush="{x:Null}"
								CornerRadius="14">
								<ContentPresenter 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center">
								</ContentPresenter>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource HighlightBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{StaticResource InfoHighlight}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource PressedBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{StaticResource InfoHighlight}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="Priority" TargetType="ToggleButton">
			<Style.Setters>
				<Setter
					Property="Background" 
					Value="{StaticResource TransparentBackground}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Opacity" Value="0.5"/>
				<Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Border 
								Background="{StaticResource TransparentBackground}"
								BorderBrush="{x:Null}"
								CornerRadius="14">
								<ContentPresenter 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center">
								</ContentPresenter>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource HighlightBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource HoverRed}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource PressedBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource RedAlert}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource PressedBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource RedAlert}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="PriorityMod" TargetType="ToggleButton">
			<Style.Setters>
				<Setter
					Property="Background" 
					Value="{StaticResource TransparentBackground}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Opacity" Value="0.5"/>
				<Setter Property="TextElement.Foreground" Value="{DynamicResource Foreground}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Border 
								Background="{StaticResource TransparentBackground}"
								BorderBrush="{x:Null}"
								CornerRadius="14">
								<ContentPresenter 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center">
								</ContentPresenter>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource HighlightBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource HoverRed}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="ToggleButton">
									<Border 
										Background="{DynamicResource PressedBackground}"
										BorderBrush="{x:Null}"
										CornerRadius="14">
										<ContentPresenter 
											HorizontalAlignment="Center" 
											VerticalAlignment="Center">
										</ContentPresenter>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource HoverRed}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Trigger.Setters>
						<Setter Property="TextElement.Foreground" Value="{DynamicResource HoverRed}"/>
						<Setter Property="Opacity" Value="1"/>
					</Trigger.Setters>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<StackPanel 
		x:Name="MainPanel" 
		RenderTransformOrigin="0.5,0.5"
		MouseDown="MainPanel_MouseDown"
		Background="{StaticResource TransparentBackground}"
		Height="Auto" 
		MinHeight="633"
		Width="420" 
		HorizontalAlignment="Left" 
		VerticalAlignment="Top"
		Margin="-50,-80,0,0">
		<StackPanel.RenderTransform>
			<TransformGroup>
				<ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
			</TransformGroup>
		</StackPanel.RenderTransform>
		<tb:TaskbarIcon
			IconSource="/Resources/icon [256x256].ico"
			ToolTipText="ToDue2">
			<tb:TaskbarIcon.ContextMenu>
				<ContextMenu>
                    <MenuItem Header="{Binding Labels.MenuItemTitleOpacity, Source={StaticResource R}}">
						<MenuItem Header="25%" Click="Transparency_Click" Tag="0.25"/>
						<MenuItem Header="50%" Click="Transparency_Click" Tag="0.5"/>
						<MenuItem Header="75%" Click="Transparency_Click" Tag="0.75"/>
						<MenuItem Header="100%" Click="Transparency_Click" Tag="1"/>
					</MenuItem>
                    <MenuItem Header="{Binding Labels.MenuItemTitleScale, Source={StaticResource R}}">
                        <MenuItem Header="{Binding Labels.MenuItemScaleSmall, Source={StaticResource R}}" Click="Scale_Click" Tag="0.5"/>
                        <MenuItem Header="{Binding Labels.MenuItemScaleNormal, Source={StaticResource R}}" Click="Scale_Click" Tag="0.75"/>
                        <MenuItem Header="{Binding Labels.MenuItemScaleLarge, Source={StaticResource R}}" Click="Scale_Click" Tag="1"/>
					</MenuItem>
					<MenuItem 
						x:Name="Dark" 
						Header="{Binding Labels.MenuItemDark, Source={StaticResource R}}" 
						IsCheckable="True"
						Checked="Theme_Checked" 
						Unchecked="Theme_UnChecked"/>
					<MenuItem
						x:Name="ShowBackground"
						Header="{Binding Labels.MenuItemShowBackground, Source={StaticResource R}}"
						IsCheckable="True"
						Checked="ShowBackground_Checked"
						Unchecked="ShowBackground_Unchecked"/>
                    <MenuItem Header="{Binding Labels.MenuItemTitlePalette, Source={StaticResource R}}">
						<MenuItem 
							x:Name="HighContrast" 
							Header="{Binding Labels.MenuItemHighContrast, Source={StaticResource R}}" 
							IsCheckable="True"
							Checked="HighContrast_Checked"
							Unchecked="HighContrast_Unchecked"/>
						<MenuItem 
							x:Name="Monochrome" 
							Header="{Binding Labels.MenuItemMonochrome, Source={StaticResource R}}" 
							IsCheckable="True"
							Checked="Monochrome_Checked"
							Unchecked="Monochrome_Unchecked"/>
					</MenuItem>
					<Separator/>
                    <MenuItem Header="{Binding Labels.MenuItemTitleAdvanced, Source={StaticResource R}}">
						<MenuItem 
							Header="{Binding Labels.MenuItemAdvancedReset, Source={StaticResource R}}" 
							Click="Reset_Click"/>
						<MenuItem 
							Header="{Binding Labels.MenuItemAdvancedRefresh, Source={StaticResource R}}" 
							Click="Refresh_Click"/>
						<MenuItem
							x:Name="AutoReorder"
							Header="{Binding Labels.MenuItemAdvancedAutoReorder, Source={StaticResource R}}"
							IsCheckable="True"
							Checked="AutoReorder_Checked"
							Unchecked="AutoReorder_Unchecked"/>
						<Separator/>
					</MenuItem>
					<Separator/>
                    <MenuItem Header="{Binding Labels.MenuItemExit, Source={StaticResource R}}" Click="Exit_Click" />
				</ContextMenu>
			</tb:TaskbarIcon.ContextMenu>
		</tb:TaskbarIcon>
		<Grid Height="152" Margin="0, -30, 0, 0">
			<TextBlock 
				Style="{StaticResource Title}"
				Text="T" 
				Margin="26,54,0,0" 
				FontSize="90" 
				Grid.RowSpan="2" 
				Height="103" 
				Width="64"/>
			<TextBlock
				Style="{StaticResource Title}"
				Text="H" 
				Margin="89,72,0,0" 
				Height="80" 
				Width="57"/>
			<TextBlock 
				Style="{StaticResource Title}"
				Text="I" 
				Margin="160,72,0,0" 
				Height="80" 
				Width="21"/>
			<TextBlock 
				Style="{StaticResource Title}"
				Text="N" 
				Margin="195,72,0,0" 
				Height="80" 
				Width="59"/>
			<TextBlock 
				Style="{StaticResource Title}"
				Text="G" 
				Margin="270,72,0,0" 
				Height="80" 
				Width="55"/>
			<TextBlock 
				Style="{StaticResource Title}"
				Text="S" 
				Margin="339,72,0,0" 
				Height="80" 
				Width="49"/>

		</Grid>
		<ScrollViewer 
			VerticalScrollBarVisibility="Hidden" 
			Background="{StaticResource TransparentBackground}"
			MaxHeight="560">
			<StackPanel>
				<StackPanel.Resources>
					<Style TargetType="{x:Type DatePickerTextBox}">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<TextBox
										x:Name="PART_TextBox" 
										Text="{Binding Path=DueDate, Converter={StaticResource DateConverter}}" 
										FontSize="20"
										FontFamily="Segoe UI Semibold"
										Foreground="{Binding Path=DueDate, Converter={StaticResource ColorConverter}}"
										Background="{StaticResource TransparentBackground}"
										HorizontalAlignment="Right"
										VerticalAlignment="Stretch"
										TextAlignment="Right"
										BorderThickness="0"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
				<ItemsControl 
					ItemsSource="{Binding ElementName=Window, Path=PinnedItems, Mode=TwoWay}"
					dd:DragDrop.IsDragSource="True"
					dd:DragDrop.IsDropTarget="True"
					dd:DragDrop.DragHandler="{Binding ElementName=Window, Path=PinnedItemDragAndDropHandler}"
					dd:DragDrop.DropHandler="{Binding ElementName=Window, Path=PinnedItemDragAndDropHandler}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid 
								Margin="0, 0, 0, 0" 
								HorizontalAlignment="Stretch"
								MinHeight="40">
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" Value="{DynamicResource PressedBackground}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Button
									Name="PinIcon"
									Width="28" 
									Height="28" 
									HorizontalAlignment="Left" 
									VerticalAlignment="Top" 
									Margin="6, 6, 10, 0"
									Click="PinIcon_Click"
									Visibility="Visible">
									<Button.Style>
										<Style TargetType="Button" BasedOn="{StaticResource DefaultButton}">
											<Style.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Content">
														<Setter.Value>
															<TextBlock 
																FontFamily="./Resources/#Segoe MDL2 Assets"
																FontSize="10"
																Foreground="{DynamicResource Foreground}"
																Text="&#xE106;"/>
														</Setter.Value>
													</Setter>
												</Trigger>
												<Trigger Property="IsPressed" Value="True">
													<Setter Property="Content">
														<Setter.Value>
															<TextBlock 
																FontFamily="./Resources/#Segoe MDL2 Assets"
																FontSize="16"
																Foreground="{DynamicResource Foreground}"
																Text="&#xE106;"/>
														</Setter.Value>
													</Setter>
												</Trigger>
												<Trigger Property="IsMouseOver" Value="False">
													<Setter Property="Content">
														<Setter.Value>
															<TextBlock 
																FontFamily="./Resources/#Segoe MDL2 Assets"
																FontSize="16"
																Foreground="{DynamicResource Foreground}"
																Text="&#xE840;"/>
														</Setter.Value>
													</Setter>
												</Trigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
								<Grid
									Margin="44, 5, 100, 5">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<ToggleButton
										Style="{StaticResource PriorityMod}"
										Grid.Column="0"
										Width="28" 
										Height="28"
										Margin="-4, 2, 10, 0"
										HorizontalAlignment="Left" 
										VerticalAlignment="Top"
										IsChecked="{Binding Path=IsOfHighPriority, Mode=TwoWay}"
										Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorLevel=2, AncestorType=Grid}, Converter={StaticResource VisibilityConverter}}">
										<TextBlock
											FontFamily="./Resources/#Segoe MDL2 Assets" 
											Text="&#xE814;" 
											FontSize="16"/>
									</ToggleButton>
									<TextBox 
										Style="{StaticResource Item}"
										Grid.Column="1"
										VerticalAlignment="Top"
										HorizontalAlignment="Stretch"
										BorderThickness="0, 0, 0, 1"
										Foreground="{Binding Path=IsOfHighPriority, Mode=OneWay,Converter={StaticResource PriorityToColorConverter}}"
										FontSize="22"
										FontFamily="Segoe UI"
										FontWeight="{Binding Path=IsOfHighPriority, Mode=OneWay, Converter={StaticResource PriorityToFontWeightConverter}}"
										TextWrapping="Wrap"
										MaxLines="2"
										TextChanged="Pinned_TextChanged"
										Text="{Binding Path=Content, Mode=OneWay}"/>
								</Grid>
								<local:CustomDatePicker
									SelectedDate="{Binding Path=DueDate, Mode=OneWay}"
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Margin="0, 5, 30, 0"
									BorderThickness="0"
									Width="60"/>
								<TextBlock
									Style="{StaticResource Body}"
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Margin="0, 12, 2, 0"
									FontFamily="./Resources/#Segoe MDL2 Assets"
									Text="&#xE784;"
									Opacity="0.5"
									Cursor="SizeNS"
									Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource VisibilityConverter}}"/>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				<ItemsControl 
					ItemsSource="{Binding ElementName=Window, Path=TodoItems}"
					dd:DragDrop.IsDragSource="True"
					dd:DragDrop.IsDropTarget="True"
					dd:DragDrop.DragHandler="{Binding ElementName=Window, Path=TodoItemDragAndDropHandler}"
					dd:DragDrop.DropHandler="{Binding ElementName=Window, Path=TodoItemDragAndDropHandler}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid 
								Name="TodoGrid"
								Margin="0, 0, 0, 5" 
								HorizontalAlignment="Stretch"
								MinHeight="40">
								<Grid.Style>
									<Style TargetType="Grid">
										<Setter Property="Background" Value="{StaticResource TransparentBackground}"/>
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</Grid.Style>
								<Button
									Name="RemoveIcon"
									Style="{StaticResource DefaultButton}"
									Width="28" 
									Height="28" 
									HorizontalAlignment="Left" 
									VerticalAlignment="Top" 
									Margin="6, 6, 0, 0"
									Background="{StaticResource TransparentBackground}" 
									BorderBrush="{x:Null}"
									Click="RemoveItem"
									Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource VisibilityConverter}}">
									<TextBlock 
										FontFamily="./Resources/#Segoe MDL2 Assets" 
										Text="&#xE106;" 
										FontSize="10" 
										Foreground="{DynamicResource Foreground}"/>
								</Button>
								<Grid Margin="44,5,100,5">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<ToggleButton
										Style="{StaticResource PriorityMod}"
										Grid.Column="0"
										Width="28" 
										Height="28"
										Margin="-4, 2, 10, 0"
										HorizontalAlignment="Left" 
										VerticalAlignment="Top"
										IsChecked="{Binding Path=IsOfHighPriority, Mode=TwoWay}"
										Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorLevel=2, AncestorType=Grid}, Converter={StaticResource VisibilityConverter}}">
										<TextBlock
											FontFamily="./Resources/#Segoe MDL2 Assets" 
											Text="&#xE814;" 
											FontSize="16"/>
									</ToggleButton>
									<TextBox 
										Style="{StaticResource Item}"
										Grid.Column="1"
										VerticalAlignment="Top"
										HorizontalAlignment="Stretch"
										BorderThickness="0, 0, 0, 1"
										Foreground="{Binding Path=IsOfHighPriority, Mode=OneWay,Converter={StaticResource PriorityToColorConverter}}"
										FontSize="22"
										FontFamily="Segoe UI"
										FontWeight="{Binding Path=IsOfHighPriority, Mode=OneWay, Converter={StaticResource PriorityToFontWeightConverter}}"
										TextWrapping="Wrap"
										MaxLines="2"
										TextChanged="Todo_TextChanged"
										Text="{Binding Path=Content, Mode=OneWay}"/>
								</Grid>
								<local:CustomDatePicker
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Margin="0, 5, 30, 0"
									BorderThickness="0"
									Width="60"
									SelectedDate="{Binding Path=DueDate, Mode=TwoWay}"/>
								<TextBlock
									Style="{StaticResource Body}"
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Margin="0, 12, 6, 0"
									FontFamily="./Resources/#Segoe MDL2 Assets"
									Text="&#xE784;"
									Opacity="0.5"
									Cursor="SizeNS"
									Visibility="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource VisibilityConverter}}"/>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>
		</ScrollViewer>
		<Grid 
			Margin="0, 5, 0, 0" 
			MinHeight="58"
			AllowDrop="True">
			<Line X1="30" X2="390" Stroke="{DynamicResource Foreground}"/>
			<Grid
				Margin="10,10,30,10">
				<Grid 
					Margin="0, 5" 
					HorizontalAlignment="Stretch"
					Background="{x:Null}">
					<Grid.Resources>
						<Style TargetType="{x:Type DatePickerTextBox}">
							<Setter Property="Control.Template">
								<Setter.Value>
									<ControlTemplate>
										<TextBox
											x:Name="PART_TextBox" 
											Text="{Binding Mode=OneTime, Converter={StaticResource DateConverter}}" 
											FontSize="20"
											FontFamily="Segoe UI Semibold"
											Foreground="{Binding Mode=OneTime, Converter={StaticResource ColorConverter}}"
											Background="{StaticResource TransparentBackground}"
											HorizontalAlignment="Right"
											VerticalAlignment="Stretch"
											TextAlignment="Right"
											BorderThickness="0"/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Grid.Resources>
					<ToggleButton
						x:Name="Toggle"
						Style="{StaticResource Pin}"
						Width="28" 
						Height="28" 
						HorizontalAlignment="Left" 
						VerticalAlignment="Center">
						<TextBlock 
							FontFamily="./Resources/#Segoe MDL2 Assets" 
							Text="&#xE840;" 
							FontSize="16"/>
					</ToggleButton>
					<ToggleButton
						x:Name="Priority"
						Style="{StaticResource Priority}"
						Width="28" 
						Height="28" 
						Margin="32, 0, 0, 0"
						HorizontalAlignment="Left" 
						VerticalAlignment="Center">
						<TextBlock
							FontFamily="./Resources/#Segoe MDL2 Assets" 
							Text="&#xE814;" 
							FontSize="16"/>
					</ToggleButton>
					<Grid Margin="60,0,70,0">
						<TextBox 
							x:Name="InputBox"					
							Foreground="{Binding ElementName=Priority, Path=IsChecked, Converter={StaticResource PriorityToColorConverter}}"
							FontSize="20"
							FontFamily="Segoe UI"
							FontWeight="{Binding ElementName=Priority, Path=IsChecked, Converter={StaticResource PriorityToFontWeightConverter}}"
							TextWrapping="Wrap"
							MaxLines="2"
							BorderThickness="0, 0, 0, 1"
							KeyUp="InputBox_Enter">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Setter Property="BorderBrush" Value="{x:Null}"/>
									<Setter Property="Background" Value="{StaticResource TransparentBackground}"/>
									<Style.Triggers>
										<Trigger Property="IsMouseCaptured" Value="True">
											<Setter Property="BorderBrush" Value="{DynamicResource Foreground}"/>
											<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
											<Setter Property="BorderBrush" Value="{x:Null}"/>
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
						<TextBlock 
							IsHitTestVisible="False" 
							Text="{Binding Labels.MainPageTipText, Source={StaticResource R}}" 
							VerticalAlignment="Center" 
							HorizontalAlignment="Left" 
							Margin="10,0,0,0" 
							FontSize="20"
							FontFamily="Segoe UI Light"
							Opacity="0.5"
							Foreground="{DynamicResource Foreground}">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed"/>
									<Style.Triggers>
										<DataTrigger 
											Binding="{Binding Text, ElementName=InputBox}" Value="">
											<Setter Property="Visibility" Value="Visible"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</Grid>
					<local:CustomDatePicker
						x:Name="DueDate"
						HorizontalAlignment="Right"
						BorderThickness="0"
						Width="60"
						SelectedDate="{Binding ElementName=Window, Path=DisplayedDueDate, Mode=OneWay}"/>
				</Grid>
			</Grid>
		</Grid>
	</StackPanel>
</Window>
